blueprint:
  name: Thermostat TPI
  description: Thermostat TPI (Time Propertional & Integral)
  domain: automation

  input:
    interval:
      name: Intervalle de déclenchement
      description: >-
         Durée de la boucle de chauffage. 
         A ajuster en fonction de l'inertie du radiateur, et de la durée de la montée en chauffe.
         Valeur en minutes.
      selector:
        number:
          min: 10
          max: 120
          step: 1
    coeff_c:
      name: Coefficient C
      description: coefficient multiplicateur de la différence entre la consigne et la température intérieure pour le calcul de la puissance (0.6 conseillé)
      selector:
        number:
          min: 0.0
          max: 1.0
          step: 0.01
    coeff_t:
      name: Coefficient T
      description: coefficient multiplicateur de la différence entre la consigne et la température extérieure pour le calcul de la puissance (0.01 conseillé)
      selector:
        number:
          min: 0.0
          max: 0.1
          step: 0.001
    entity_consigne:
      name: Consigne
      description: Champ d'entrée de la température de consigne (input number).
      selector:
        entity:
          domain: input_number
    entity_temp_ext:
      name: Température extérieure
      description: Sonde de mesure de la température extérieure (sensor)
      selector:
        entity:
          domain: sensor
          device_class: temperature
    entity_temp_int:
      name: Température intérieure
      description: Sonde de mesure de la température intérieure (sensor)
      selector:
        entity:
          domain: sensor
          device_class: temperature
    unavailable_temp_threshold:
      name: Seuil de température mode confort
      description: >-
        Dans le cas où la température intérieure est indisponible, l'automatisation 
        bascule le radiateur sur le mode "confort" si la tepérature de consigne
        est au dessus de cette valeur, ou en mode "eco" si en dessous.
      selector:
        number:
          min: 15
          max: 25
          step: 1
    entity_puissance:
      name: Puissance
      description: Champ d'affichage de la puissance (input_number)
      selector:
        entity:
          domain: input_number
    entity_chauffage:
      name: Chauffage
      description: Menu du chauffage (input_select)
      selector:
        entity:
          domain: input_select

# Récupération des paramètres
variables:
  coeff_c: !input coeff_c
  coeff_t: !input coeff_t
  entity_temp_int: !input entity_temp_int
  entity_temp_ext: !input entity_temp_ext
  temp_eco: 16
  interval: !input interval

trigger:
  - platform: time_pattern
    minutes: "/{{ interval }}"
  - platform: state
    entity_id: !input entity_consigne

action:
  - alias: récupération des données
    variables:
      entity_consigne: !input entity_consigne
      consigne: "{{states(entity_consigne)}}"
      temp_ext: "{{ states(entity_temp_ext) }}"
      temp_int: "{{ states(entity_temp_int) }}"
  - choose:
      - conditions: "{{ not (temp_int == 'offline' or temp_int == 'unavailable') }}"
        sequence:
          - variables:
              puissance: >-
                {%set val = coeff_c * (consigne - temp_int) + coeff_t * (consigne - temp_ext) %}  
                {% if val > 1 %} 
                    {% set val = 100 %}  
                {% elif val < 0 %} 
                    {% set val = 0 %}  
                {% else %} 
                    {% set val = ( (val * 100) | round(0)) %} 
                {% endif %} 
                {{val}}
              temps_chauffe: "{{ puissance * 6 }}"
              # Si la température ciblée est > a la température ECO du radiateur
              # Alors passer le radiateur en eco plutôt que stop, afin d'éviter
              # un radiateur coincé sur stop si HA fail.
              stop_state: >-
                {% set state = "Arrêt" %}
                {% if consigne > temp_eco  %}
                  {% set state = "Eco" %}
                {% endif %}
                {{ state }}
          - alias: Met à jour l'indicateur de puissance
            service: input_number.set_value
            target:
              entity_id: !input entity_puissance
            data:
              value: "{{puissance}}"

          - choose:
              - conditions: "{{puissance == 0}}"
                sequence:
                  - service: input_select.select_option
                    data:
                      option: "{{stop_state}}"
                    target:
                      entity_id: !input entity_chauffage
              - conditions: "{{ puissance > 99}}"
                sequence:
                  - service: input_select.select_option
                    data:
                      option: Confort
                    target:
                      entity_id: !input entity_chauffage
            default:
              - service: input_select.select_option
                data:
                  option: Confort
                target:
                  entity_id: !input entity_chauffage
              - delay: "{{temps_chauffe}}"
              - service: input_select.select_option
                data:
                  option: "{{stop_state}}"
                target:
                  entity_id: !input entity_chauffage
    # The temp sensor is unavailable, use heaters presets
    default:
      - variables:
          threshold: !input unavailable_temp_threshold
      - choose:
          - conditions: "{{ consigne > threshold }}"
            sequence:
              - service: input_select.select_option
                data:
                  option: Confort
                target:
                  entity_id: !input entity_chauffage
        default:
          - service: input_select.select_option
            data:
              option: Eco
            target:
              entity_id: !input entity_chauffage
mode: restart
